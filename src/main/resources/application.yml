spring:
  redis:
    redisson:
      file: classpath:redisson.yaml
  application:
    name: BookingSystem
  cache:
    redis:
      enable-statistics: true
      serialization:
        value: com.fasterxml.jackson.databind.ObjectMapper
    type: redis
    cache-names: availableUnits
  jpa:
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        jdbc.time_zone: UTC
        order_inserts: true
        order_updates: true
        query.fail_on_pagination_over_collection_fetch: true
        query.in_clause_parameter_padding: true
        connection.provider_disables_autocommit: true
        query.plan_cache_max_size: 4096
        id.new_generator_mappings: true
        jdbc.lob.non_contextual_creation: true
        jdbc:
          fetch_size: 100
        cache.use_second_level_cache: true
        cache.use_query_cache: true
        cache.use_minimal_puts: true
        cache.region.factory_class: org.redisson.hibernate.RedissonRegionFactory
        cache.redisson.config: redisson.yaml
    hibernate:
      ddl-auto: none
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      auto-commit: false
      connection-timeout: 30000
      maximum-pool-size: 40
      minimum-idle: 5
      max-lifetime: 1800000
      pool-name: booking_system
      leak-detection-threshold: 20000
  liquibase:
    change-log: classpath:liquibase/master.xml
    enabled: true
    drop-first: true
    url: jdbc:postgresql://localhost:5432/postgres
    user: postgres
    password: postgres

server:
  port: 8080
  shutdown: graceful
  address: 127.0.0.1

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

springdoc:
  swagger-ui:
    path: /swagger-ui/index.html

logging:
  level:
    root: DEBUG
    com.bookingsystem: DEBUG
    org.springframework: DEBUG
